{
	"info": {
		"_postman_id": "b72167cb-641e-4925-a27d-d22b5aa2ed4a",
		"name": "Connected_Silo",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Setup",
			"item": [
				{
					"name": "GET JWT Token + Environment Variables",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f22133f-d70c-477e-abf3-4e86b351926a",
								"exec": [
									"var respCode = 200;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === respCode;",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"LoginTokenT1\", \"Bearer \" + data.access_token);",
									"postman.setGlobalVariable(\"JWT-TOKEN\", data.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Cache-Control",
								"value": "no-cache"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "response_type",
									"value": "token",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{clientSecret}}",
									"type": "text"
								}
							]
						},
						"url": "https://{{TenantName}}.{{uaaURLPostfix}}/oauth/token"
					},
					"response": []
				}
			]
		},
		{
			"name": "Cleanup",
			"item": [
				{
					"name": "Read All Things",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7aef1920-e1f0-4b39-893e-595dea97ec65",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3a9e2ab1-5f21-4a9c-97ec-8b0b70943b4e",
								"exec": [
									"if(responseCode.code === 200) {",
									"    var data = JSON.parse(responseBody);",
									"    ",
									"    var things = [];",
									"    var devices = [];",
									"    var TenantPackageNamespace = postman.getEnvironmentVariable(\"TenantPackageNamespace\");",
									"    var PackageName = postman.getEnvironmentVariable(\"PackageName\");",
									"    var ThingTypeName = postman.getEnvironmentVariable(\"ThingTypeName\");",
									"",
									"    var thingType = TenantPackageNamespace+\".\"+PackageName+\":\"+ThingTypeName;",
									"    for ( var i = 0; i < data.value.length; i++ ) {",
									"        ",
									"        if ( data.value[i]._thingType == thingType ) {",
									"            things.push(data.value[i]._id);",
									"            devices.push(data.value[i]._externalId);",
									"        }",
									"    }",
									"    ",
									"    postman.setEnvironmentVariable(\"allThings\",JSON.stringify(things));",
									"    postman.setEnvironmentVariable(\"allDevices\",JSON.stringify(devices));",
									"    ",
									"",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{ThingURI}}/Things"
					},
					"response": []
				},
				{
					"name": "Delete All Things",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7aef1920-e1f0-4b39-893e-595dea97ec65",
								"exec": [
									"devices = JSON.parse(postman.getEnvironmentVariable(\"allThings\"));",
									"",
									"var deviceId=postman.getEnvironmentVariable(\"Thing_to_be_deleted\");",
									"if ( deviceId === undefined || deviceId === \"\" ) {",
									"    deviceId = devices[0];",
									"} else {",
									"    var anIndex = devices.indexOf(deviceId);",
									"    if ( anIndex == -1 ) {",
									"        deviceId = devices[0];",
									"    } else if ( anIndex < devices.length-1 ) {",
									"        deviceId = devices[anIndex+1];",
									"    } else {",
									"        deviceId = undefined;",
									"        postman.setEnvironmentVariable(\"Thing_to_be_deleted\", deviceId);",
									"        var a = b.c;",
									"    }",
									"}",
									"postman.setEnvironmentVariable(\"Thing_to_be_deleted\", deviceId);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3a9e2ab1-5f21-4a9c-97ec-8b0b70943b4e",
								"exec": [
									"if(responseCode.code === 200) {",
									"    var data = JSON.parse(responseBody);",
									"    ",
									"    var things = [];",
									"    var devices = [];",
									"    var TenantPackageNamespace = postman.getEnvironmentVariable(\"TenantPackageNamespace\");",
									"    var PackageName = postman.getEnvironmentVariable(\"PackageName\");",
									"    var ThingTypeName = postman.getEnvironmentVariable(\"ThingTypeName\");",
									"",
									"    var thingType = TenantPackageNamespace+\".\"+PackageName+\":\"+ThingTypeName;",
									"    for ( var i = 0; i < data.value.length; i++ ) {",
									"        ",
									"        if ( data.value[i]._thingType == thingType ) {",
									"            things.push(data.value[i]._id);",
									"            devices.push(data.value[i]._externalId);",
									"        }",
									"    }",
									"    ",
									"    postman.setEnvironmentVariable(\"allThings\",JSON.stringify(things));",
									"    postman.setEnvironmentVariable(\"allDevices\",JSON.stringify(devices));",
									"    ",
									"",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{ThingURI}}/Things('{{Thing_to_be_deleted}}')"
					},
					"response": []
				}
			]
		},
		{
			"name": "Thing Type",
			"item": [
				{
					"name": "Post a new package",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var respCode = 201;",
									"var respMinLength = -1;",
									"var respMaxLength = -1;",
									"var respTime = globals.TimeoutInstant;",
									"",
									"eval(globals.BasicTests);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Name\": \"{{TenantPackageNamespace}}.{{PackageName}}\",\n  \"Scope\": \"private\",\n  \"Description\": \"{{TenantPackageNamespace}}.{{PackageName}}\",\n  \"Status\": \"Active\",\n  \"Descriptions\":[{\n\t\"Description\": \"{{TenantPackageNamespace}}.{{PackageName}}\",\n\t\"LanguageCode\": \"en\"\n  }]\n}"
						},
						"url": "{{PACKAGE_HOST}}/Package/v1/Packages"
					},
					"response": []
				},
				{
					"name": "Fetch All Packages",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var respCode = 201;",
									"var respMinLength = -1;",
									"var respMaxLength = -1;",
									"var respTime = globals.TimeoutInstant;",
									"",
									"eval(globals.BasicTests);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{PACKAGE_HOST}}/Package/v1/Packages"
					},
					"response": []
				},
				{
					"name": "Fetch Register IoT Service Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a72c7246-79f2-401c-80dc-84b06010225f",
								"exec": [
									"var respCode = 201;",
									"var respMinLength = -1;",
									"var respMaxLength = -1;",
									"var respTime = globals.TimeoutInstant;",
									"",
									"eval(globals.BasicTests);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"user\": \"root\",\r\n   \"password\":\"MZc7VkxK2qvDbn1\",\r\n   \"host\": \"0e2ebf78-116b-489e-bd5d-04c0508f1977.canary.cp.iot.sap\",\r\n   \"instanceId\": \"0e2ebf78-116b-489e-bd5d-04c0508f1977\",\r\n   \"iotTenantId\": \"420291731\"\r\n}"
						},
						"url": "{{ThingDeviceMapperURI}}/v1/Credentials"
					},
					"response": []
				},
				{
					"name": "Register Register IoT Service Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bba50a8b-f922-460c-aa91-1744ba349f7c",
								"exec": [
									"var respCode = 201;",
									"var respMinLength = -1;",
									"var respMaxLength = -1;",
									"var respTime = globals.TimeoutInstant;",
									"",
									"eval(globals.BasicTests);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"user\": \"root\",\r\n   \"password\":\"MZc7VkxK2qvDbn1\",\r\n   \"host\": \"0e2ebf78-116b-489e-bd5d-04c0508f1977.canary.cp.iot.sap\",\r\n   \"instanceId\": \"0e2ebf78-116b-489e-bd5d-04c0508f1977\",\r\n   \"iotTenantId\": \"420291731\"\r\n}"
						},
						"url": "{{ThingDeviceMapperURI}}/v1/Credentials"
					},
					"response": []
				},
				{
					"name": "Update IoT Service Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1860bb16-b171-4028-9c31-182f3aefa11f",
								"exec": [
									"var respCode = 201;",
									"var respMinLength = -1;",
									"var respMaxLength = -1;",
									"var respTime = globals.TimeoutInstant;",
									"",
									"eval(globals.BasicTests);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"user\": \"root\",\r\n   \"password\":\"MZc7VkxK2qvDbn1\",\r\n   \"host\": \"0e2ebf78-116b-489e-bd5d-04c0508f1977.canary.cp.iot.sap\",\r\n   \"instanceId\": \"0e2ebf78-116b-489e-bd5d-04c0508f1977\",\r\n   \"iotTenantId\": \"420291731\"\r\n}"
						},
						"url": "{{ThingDeviceMapperURI}}/v1/Credentials"
					},
					"response": []
				},
				{
					"name": "Post Image PST MasterData",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"{{TenantPackageNamespace}}.{{PackageName}}:Image\",\r\n  \"Description\": \"Image properties\",\r\n  \"DataCategory\": \"MasterData\",\r\n  \"Descriptions\": [{\r\n    \"LanguageCode\": \"en\",\r\n    \"Description\": \"Image properties\"\r\n  }],\r\n  \"Properties\": [{\r\n    \"Name\": \"ImageName\",\r\n    \"Type\": \"String\",\r\n    \"PropertyLength\": \"127\"\r\n  }]\r\n}"
						},
						"url": "{{ConfigThingURI}}/ThingConfiguration/v1/Packages('{{TenantPackageNamespace}}.{{PackageName}}')/PropertySetTypes"
					},
					"response": []
				},
				{
					"name": "Post Material PST MasterData",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"{{TenantPackageNamespace}}.{{PackageName}}:Material\",\r\n  \"Description\": \"Material properties\",\r\n  \"DataCategory\": \"MasterData\",\r\n  \"Descriptions\": [{\r\n    \"LanguageCode\": \"en\",\r\n    \"Description\": \"Material properties\"\r\n  }],\r\n  \"Properties\": [{\r\n    \"Name\": \"Material\",\r\n    \"Type\": \"String\",\r\n    \"PropertyLength\": \"127\"\r\n  }]\r\n}"
						},
						"url": "{{ConfigThingURI}}/ThingConfiguration/v1/Packages('{{TenantPackageNamespace}}.{{PackageName}}')/PropertySetTypes"
					},
					"response": []
				},
				{
					"name": "Post Silo Metadata PST MasterData",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"{{TenantPackageNamespace}}.{{PackageName}}:SILO_METADATA\",\r\n  \"Description\": \"Silo Metadata\",\r\n  \"DataCategory\": \"MasterData\",\r\n  \"Descriptions\": [{\r\n    \"LanguageCode\": \"en\",\r\n    \"Description\": \"Silo Metadata\"\r\n  }],\r\n  \"Properties\": [{\r\n    \"Name\": \"serialNumber\",\r\n    \"Descriptions\": [{\r\n        \"LanguageCode\": \"en\",\r\n        \"Description\": \"Silo Serial Number\"\r\n      }],\r\n    \"Type\": \"String\",\r\n    \"PropertyLength\": \"127\",\r\n    \"QualityCode\":\"0\"\r\n  },\r\n  {\r\n    \"Name\": \"moduleSerialNumber\",\r\n    \"Descriptions\": [{\r\n        \"LanguageCode\": \"en\",\r\n        \"Description\": \"IoT Module Serial Number\"\r\n      }],\r\n    \"Type\": \"String\",\r\n    \"PropertyLength\": \"127\",\r\n    \"QualityCode\":\"0\"\r\n  },\r\n  {\r\n    \"Name\": \"siloType\",\r\n    \"Descriptions\": [{\r\n        \"LanguageCode\": \"en\",\r\n        \"Description\": \"Type of Silo\"\r\n      }],\r\n    \"Type\": \"String\",\r\n    \"PropertyLength\": \"127\",\r\n    \"QualityCode\":\"0\"\r\n  },\r\n  {\r\n    \"Name\": \"siloCapacity\",\r\n    \"Descriptions\": [{\r\n        \"LanguageCode\": \"en\",\r\n        \"Description\": \"Capacity of Silo\"\r\n      }],\r\n    \"Type\": \"Numeric\",\r\n    \"PropertyLength\": \"8,3\",\r\n    \"QualityCode\":\"0\"\r\n  },\r\n  {\r\n    \"Name\": \"storageLocation\",\r\n    \"Descriptions\": [{\r\n        \"LanguageCode\": \"en\",\r\n        \"Description\": \"Storage Location\"\r\n      }],\r\n    \"Type\": \"String\",\r\n    \"PropertyLength\": \"127\",\r\n    \"QualityCode\":\"0\"\r\n  },\r\n  {\r\n    \"Name\": \"plant\",\r\n    \"Descriptions\": [{\r\n        \"LanguageCode\": \"en\",\r\n        \"Description\": \"Plant\"\r\n      }],\r\n    \"Type\": \"String\",\r\n    \"PropertyLength\": \"127\",\r\n    \"QualityCode\":\"0\"\r\n  }]\r\n}"
						},
						"url": "{{ConfigThingURI}}/ThingConfiguration/v1/Packages('{{TenantPackageNamespace}}.{{PackageName}}')/PropertySetTypes"
					},
					"response": []
				},
				{
					"name": "Post Silo TimeSeries PST TimeSeriesData",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"{{TenantPackageNamespace}}.{{PackageName}}:SILO_TIME_SERIES\",\r\n  \"Description\": \"Time Series of Silo\",\r\n  \"DataCategory\": \"TimeSeriesData\",\r\n  \"Descriptions\": [{\r\n    \"LanguageCode\": \"en\",\r\n    \"Description\": \"Time Series of Silo\"\r\n  }],\r\n  \"Properties\": [\r\n    {\r\n            \"Name\": \"temperature\",\r\n             \"Descriptions\": [{\r\n\t\t        \"LanguageCode\": \"en\",\r\n\t\t        \"Description\": \"Temperature of Silo\"\r\n\t\t      }],\r\n            \"Type\": \"Numeric\",\r\n            \"PropertyLength\": \"5,2\",\r\n            \"UnitOfMeasure\": \"°C\",\r\n            \"QualityCode\": \"0\"\r\n       },\r\n        {\r\n            \"Name\": \"humidity\",\r\n            \"Descriptions\": [{\r\n\t\t        \"LanguageCode\": \"en\",\r\n\t\t        \"Description\": \"Humidity in Silo\"\r\n\t\t      }],\r\n            \"Type\": \"Numeric\",\r\n            \"PropertyLength\": \"5,3\",\r\n            \"QualityCode\": \"0\"\r\n    },\r\n        {\r\n\r\n            \"Name\": \"fillLevelTons\",\r\n            \"Descriptions\": [{\r\n\t\t        \"LanguageCode\": \"en\",\r\n\t\t        \"Description\": \"Current fill level of Silo in Tons\"\r\n\t\t      }],\r\n            \"Type\": \"Numeric\",\r\n            \"PropertyLength\": \"5,2\",\r\n            \"QualityCode\": \"0\"\r\n        },\r\n      {\r\n  \r\n          \"Name\": \"latitude\",\r\n          \"Descriptions\": [{\r\n\t\t        \"LanguageCode\": \"en\",\r\n\t\t        \"Description\": \"Latitude\"\r\n\t\t      }],\r\n          \"Type\": \"Numeric\",\r\n          \"PropertyLength\": \"5,2\"\r\n      },\r\n        {\r\n            \"Name\": \"longitude\",\r\n            \"Descriptions\": [{\r\n\t\t        \"LanguageCode\": \"en\",\r\n\t\t        \"Description\": \"Longitude\"\r\n\t\t      }],\r\n            \"Type\": \"Numeric\",\r\n            \"PropertyLength\": \"5,2\",\r\n            \"QualityCode\": \"0\"\r\n        }]\r\n}"
						},
						"url": "{{ConfigThingURI}}/ThingConfiguration/v1/Packages('{{TenantPackageNamespace}}.{{PackageName}}')/PropertySetTypes"
					},
					"response": []
				},
				{
					"name": "Post Connected Silos Thing Type",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"Name\": \"{{TenantPackageNamespace}}.{{PackageName}}:{{ThingTypeName}}\",\r\n\t\"PackageName\": \"{{TenantPackageNamespace}}.{{PackageName}}\",\r\n\t\"Descriptions\": [{\r\n\t\t\"LanguageCode\": \"en\",\r\n\t\t\"Description\": \"Connected Silo\"\r\n\t}],\r\n\t\"PropertySets\": [{\r\n\t\t\"Name\": \"SILO_METADATA\",\r\n\t\t\"PropertySetType\": \"{{TenantPackageNamespace}}.{{PackageName}}:SILO_METADATA\",\r\n\t\t\"Descriptions\": [{\r\n\t\t\t\"LanguageCode\": \"en\",\r\n\t\t\t\"Description\": \"Silo Metadata\"\r\n\t\t}]\r\n\t},\r\n\t{\r\n\t\t\"Name\": \"SILO_TIME_SERIES\",\r\n\t\t\"PropertySetType\": \"{{TenantPackageNamespace}}.{{PackageName}}:SILO_TIME_SERIES\",\r\n\t\t\"Descriptions\": [{\r\n\t\t\t\"LanguageCode\": \"en\",\r\n\t\t\t\"Description\": \"Time Series of Silo\"\r\n\t\t}]\r\n\t},\r\n\t{\r\n\t\t\"Name\": \"Image\",\r\n\t\t\"PropertySetType\": \"{{TenantPackageNamespace}}.{{PackageName}}:Image\",\r\n\t\t\"Descriptions\": [{\r\n\t\t\t\"LanguageCode\": \"en\",\r\n\t\t\t\"Description\": \"Image\"\r\n\t\t}]\r\n\t},\r\n\t{\r\n\t\t\"Name\": \"Material\",\r\n\t\t\"PropertySetType\": \"{{TenantPackageNamespace}}.{{PackageName}}:Material\",\r\n\t\t\"Descriptions\": [{\r\n\t\t\t\"LanguageCode\": \"en\",\r\n\t\t\t\"Description\": \"Material\"\r\n\t\t}]\r\n\t}],\r\n\t\"SensorTypeMappings\": [{\r\n\t\t\"Descriptions\": [{\r\n\t\t\t\"LanguageCode\": \"en\",\r\n\t\t\t\"Description\": \"Connected Silo Sensor Type Mappings\"\r\n\t\t}],\r\n\t\t\"Name\": \"ConnectedSiloTypeMappings\",\r\n\t\t\"MeasureMappings\": [{\r\n\t\t\t\"SensorTypeName\": \"ConnectedSilos\",\r\n\t\t\t\"CapabilityName\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"CapabilityPropertyId\": \"temperature\",\r\n\t\t\t\"PropertySetTypeId\": \"{{TenantPackageNamespace}}.{{PackageName}}:SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypeId\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypePropertyId\": \"temperature\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"SensorTypeName\": \"ConnectedSilos\",\r\n\t\t\t\"CapabilityName\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"CapabilityPropertyId\": \"humidity\",\r\n\t\t\t\"PropertySetTypeId\": \"{{TenantPackageNamespace}}.{{PackageName}}:SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypeId\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypePropertyId\": \"humidity\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"SensorTypeName\": \"ConnectedSilos\",\r\n\t\t\t\"CapabilityName\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"CapabilityPropertyId\": \"fillLevelTons\",\r\n\t\t\t\"PropertySetTypeId\": \"{{TenantPackageNamespace}}.{{PackageName}}:SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypeId\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypePropertyId\": \"fillLevelTons\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"SensorTypeName\": \"ConnectedSilos\",\r\n\t\t\t\"CapabilityName\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"CapabilityPropertyId\": \"latitude\",\r\n\t\t\t\"PropertySetTypeId\": \"{{TenantPackageNamespace}}.{{PackageName}}:SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypeId\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypePropertyId\": \"latitude\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"SensorTypeName\": \"ConnectedSilos\",\r\n\t\t\t\"CapabilityName\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"CapabilityPropertyId\": \"longitude\",\r\n\t\t\t\"PropertySetTypeId\": \"{{TenantPackageNamespace}}.{{PackageName}}:SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypeId\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypePropertyId\": \"longitude\"\r\n\t\t}]\r\n\t}],\r\n\t\"SensorTypes\": [{\r\n\t\t\"Name\": \"ConnectedSilos\",\r\n\t\t\"SensorTypeCapabilities\": [{\r\n\t\t\t\"Capability\": {\r\n\t\t\t\t\"Name\": \"SILO_TIME_SERIES\",\r\n\t\t\t\t\"Properties\": [{\r\n\t\t\t\t\t\"Name\": \"temperature\",\r\n\t\t\t\t\t\"DataType\": \"Double\",\r\n\t\t\t\t\t\"UnitOfMeasure\": \"C\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"Name\": \"humidity\",\r\n\t\t\t\t\t\"DataType\": \"Double\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"Name\": \"fillLevelTons\",\r\n\t\t\t\t\t\"DataType\": \"Double\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"Name\": \"latitude\",\r\n\t\t\t\t\t\"DataType\": \"Double\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"Name\": \"longitude\",\r\n\t\t\t\t\t\"DataType\": \"Double\"\r\n\t\t\t\t}]\r\n\t\t\t},\r\n\t\t\t\"Type\": \"measure\"\r\n\t\t}]\r\n\t}]\r\n}"
						},
						"url": "{{ConfigThingURI}}/ThingConfiguration/v2/Packages('{{TenantPackageNamespace}}.{{PackageName}}')/ThingTypes"
					},
					"response": []
				},
				{
					"name": "Fetch Connected Silos Thing Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d7a5429-88dd-413f-a059-f3b369066e6e",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"var SensorTypeMappingId = data.d.SensorTypeMappings.results[0].MappingId;",
									"postman.setEnvironmentVariable(\"SensorTypeMappingId\",SensorTypeMappingId);",
									"var SensorTypeId = data.d.SensorTypeMappings.results[0].MeasureMappings.results[0].SensorTypeId;",
									"postman.setEnvironmentVariable(\"SensorTypeId\",SensorTypeId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"Name\": \"{{TenantPackageNamespace}}.{{PackageName}}:{{ThingTypeName}}\",\r\n\t\"PackageName\": \"{{TenantPackageNamespace}}.{{PackageName}}\",\r\n\t\"Descriptions\": [{\r\n\t\t\"LanguageCode\": \"en\",\r\n\t\t\"Description\": \"Connected Silo\"\r\n\t}],\r\n\t\"PropertySets\": [{\r\n\t\t\"Name\": \"SILO_METADATA\",\r\n\t\t\"PropertySetType\": \"{{TenantPackageNamespace}}.{{PackageName}}:SILO_METADATA\",\r\n\t\t\"Descriptions\": [{\r\n\t\t\t\"LanguageCode\": \"en\",\r\n\t\t\t\"Description\": \"Silo Metadata\"\r\n\t\t}]\r\n\t},\r\n\t{\r\n\t\t\"Name\": \"SILO_TIME_SERIES\",\r\n\t\t\"PropertySetType\": \"{{TenantPackageNamespace}}.{{PackageName}}:SILO_TIME_SERIES\",\r\n\t\t\"Descriptions\": [{\r\n\t\t\t\"LanguageCode\": \"en\",\r\n\t\t\t\"Description\": \"Time Series of Silo\"\r\n\t\t}]\r\n\t},\r\n\t{\r\n\t\t\"Name\": \"Image\",\r\n\t\t\"PropertySetType\": \"{{TenantPackageNamespace}}.{{PackageName}}:Image\",\r\n\t\t\"Descriptions\": [{\r\n\t\t\t\"LanguageCode\": \"en\",\r\n\t\t\t\"Description\": \"Image\"\r\n\t\t}]\r\n\t}],\r\n\t\"SensorTypeMappings\": [{\r\n\t\t\"Descriptions\": [{\r\n\t\t\t\"LanguageCode\": \"en\",\r\n\t\t\t\"Description\": \"Sensor Type Mappings\"\r\n\t\t}],\r\n\t\t\"Name\": \"DemoDemoCoolerSensorTypeMappings\",\r\n\t\t\"MeasureMappings\": [{\r\n\t\t\t\"SensorTypeName\": \"ConnectedSilos\",\r\n\t\t\t\"CapabilityName\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"CapabilityPropertyId\": \"temperature\",\r\n\t\t\t\"PropertySetTypeId\": \"{{TenantPackageNamespace}}.{{PackageName}}:SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypeId\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypePropertyId\": \"temperature\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"SensorTypeName\": \"ConnectedSilos\",\r\n\t\t\t\"CapabilityName\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"CapabilityPropertyId\": \"humidity\",\r\n\t\t\t\"PropertySetTypeId\": \"{{TenantPackageNamespace}}.{{PackageName}}:SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypeId\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypePropertyId\": \"humidity\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"SensorTypeName\": \"ConnectedSilos\",\r\n\t\t\t\"CapabilityName\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"CapabilityPropertyId\": \"fillLevelTons\",\r\n\t\t\t\"PropertySetTypeId\": \"{{TenantPackageNamespace}}.{{PackageName}}:SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypeId\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypePropertyId\": \"fillLevelTons\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"SensorTypeName\": \"ConnectedSilos\",\r\n\t\t\t\"CapabilityName\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"CapabilityPropertyId\": \"latitude\",\r\n\t\t\t\"PropertySetTypeId\": \"{{TenantPackageNamespace}}.{{PackageName}}:SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypeId\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypePropertyId\": \"latitude\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"SensorTypeName\": \"ConnectedSilos\",\r\n\t\t\t\"CapabilityName\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"CapabilityPropertyId\": \"longitude\",\r\n\t\t\t\"PropertySetTypeId\": \"{{TenantPackageNamespace}}.{{PackageName}}:SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypeId\": \"SILO_TIME_SERIES\",\r\n\t\t\t\"NamedPropertySetTypePropertyId\": \"longitude\"\r\n\t\t}]\r\n\t}],\r\n\t\"SensorTypes\": [{\r\n\t\t\"Name\": \"ConnectedSilos\",\r\n\t\t\"SensorTypeCapabilities\": [{\r\n\t\t\t\"Capability\": {\r\n\t\t\t\t\"Name\": \"SILO_TIME_SERIES\",\r\n\t\t\t\t\"Properties\": [{\r\n\t\t\t\t\t\"Name\": \"temperature\",\r\n\t\t\t\t\t\"DataType\": \"Double\",\r\n\t\t\t\t\t\"UnitOfMeasure\": \"C\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"Name\": \"humidity\",\r\n\t\t\t\t\t\"DataType\": \"Double\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"Name\": \"fillLevelTons\",\r\n\t\t\t\t\t\"DataType\": \"Double\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"Name\": \"latitude\",\r\n\t\t\t\t\t\"DataType\": \"Double\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"Name\": \"longitude\",\r\n\t\t\t\t\t\"DataType\": \"Double\"\r\n\t\t\t\t}]\r\n\t\t\t},\r\n\t\t\t\"Type\": \"measure\"\r\n\t\t}]\r\n\t}]\r\n}"
						},
						"url": {
							"raw": "{{ConfigThingURI}}/ThingConfiguration/v2/ThingTypes('{{TenantPackageNamespace}}.{{PackageName}}:{{ThingTypeName}}')?$expand=SensorTypeMappings/MeasureMappings,SensorTypeMappings/TargetMappings",
							"host": [
								"{{ConfigThingURI}}"
							],
							"path": [
								"ThingConfiguration",
								"v2",
								"ThingTypes('{{TenantPackageNamespace}}.{{PackageName}}:{{ThingTypeName}}')"
							],
							"query": [
								{
									"key": "$expand",
									"value": "SensorTypeMappings/MeasureMappings,SensorTypeMappings/TargetMappings"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Metadata of Advanced Thing List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "96f41940-088a-486d-815a-1d1d8b2de153",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{JWT-TOKEN}}"
							},
							{
								"key": "sap-iot-eventtype",
								"value": "com.sap.appiot.eventtypes:StandardEventType",
								"type": "text"
							},
							{
								"key": "sap-iot-pst",
								"value": "{{TenantPackageNamespace}}.com.connected.silos:SILO_TIME_SERIES,{{TenantPackageNamespace}}.com.connected.silos:SILO_METADATA,{{TenantPackageNamespace}}.com.connected.silos:Image,{{TenantPackageNamespace}}.com.connected.silos:Material",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ADVANCEDLIST_THING_HOST}}/CompositeThings/v1/$metadata?",
							"host": [
								"{{ADVANCEDLIST_THING_HOST}}"
							],
							"path": [
								"CompositeThings",
								"v1",
								"$metadata"
							],
							"query": [
								{
									"key": "sap-iot-pst",
									"value": "{{TenantPackageNamespace}}.com.connected.silos:SILO_TIME_SERIES",
									"disabled": true
								},
								{
									"key": "sap-iot-eventtype",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Data of Advanced Thing List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "96f41940-088a-486d-815a-1d1d8b2de153",
								"exec": [
									"var anIndex = 1;",
									"var jsonData = JSON.parse(responseBody);",
									"var results = jsonData.d.results;",
									"postman.setGlobalVariable(\"PROPERTY_SET_TYPE\", results[anIndex].PropertySetType);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{JWT-TOKEN}}"
							},
							{
								"key": "sap-iot-eventtype",
								"value": "com.sap.appiot.eventtypes:StandardEventType",
								"type": "text"
							},
							{
								"key": "sap-iot-pst",
								"value": "{{TenantPackageNamespace}}.com.connected.silos:SILO_TIME_SERIES,{{TenantPackageNamespace}}.com.connected.silos:SILO_METADATA,{{TenantPackageNamespace}}.com.connected.silos:Image,{{TenantPackageNamespace}}.com.connected.silos:Material",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ADVANCEDLIST_THING_HOST}}/CompositeThings/v1/Things?$expand=DYN_ENT_<<TENANT-PACKAGE-NAMESPACE_WITH_UNDERSCORE>>_com_connected_silos__SILO_TIME_SERIES,DYN_ENT_<<TENANT-PACKAGE-NAMESPACE_WITH_UNDERSCORE>>_com_connected_silos__Image,DYN_ENT_<<TENANT-PACKAGE-NAMESPACE_WITH_UNDERSCORE>>_com_connected_silos__Material,DYN_ENT_<<TENANT-PACKAGE-NAMESPACE_WITH_UNDERSCORE>>_com_connected_silos__SILO_METADATA&$format=json",
							"host": [
								"{{ADVANCEDLIST_THING_HOST}}"
							],
							"path": [
								"CompositeThings",
								"v1",
								"Things"
							],
							"query": [
								{
									"key": "sap-iot-pst",
									"value": "{{TenantPackageNamespace}}.com.connected.silos:SILO_TIME_SERIES",
									"disabled": true
								},
								{
									"key": "sap-iot-eventtype",
									"value": "",
									"disabled": true
								},
								{
									"key": "$expand",
									"value": "DYN_ENT_<<TENANT-PACKAGE-NAMESPACE_WITH_UNDERSCORE>>_com_connected_silos__SILO_TIME_SERIES,DYN_ENT_<<TENANT-PACKAGE-NAMESPACE_WITH_UNDERSCORE>>_com_connected_silos__Image,DYN_ENT_<<TENANT-PACKAGE-NAMESPACE_WITH_UNDERSCORE>>_com_connected_silos__Material,DYN_ENT_<<TENANT-PACKAGE-NAMESPACE_WITH_UNDERSCORE>>_com_connected_silos__SILO_METADATA"
								},
								{
									"key": "$format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Master Data",
			"item": [
				{
					"name": "Material Master Data",
					"item": [
						{
							"name": "Create ObjectType",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{LoginTokenT1}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"Name\": \"{{TenantPackageNamespace}}.{{PackageName}}:MATERIAL_MARA\",\n\t\"PackageName\": \"{{TenantPackageNamespace}}.{{PackageName}}\",\n\t\"Descriptions\": [{\n\t\t\"LanguageCode\": \"en\",\n\t\t\"Description\": \"Material Data\"\n\t}],\n\t\"Source\": \"Material Management\",\n\t\"IsMultiLingual\": true,\n\t\"Properties\": [{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"MATNR\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"18\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Material Number\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"MTART\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"4\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Material Type\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"MBRSH\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"1\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Industry sector\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"MATKL\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"9\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Material Group\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"MEINS\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"3\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Base Unit of Measure\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"BSTME\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"3\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Purchase Order Unit of Measure\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"GROES\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"32\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Size/dimensions\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"WRKST\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"48\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Basic Material\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"NORMT\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"18\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Industry Standard Description (such as ANSI or ISO)\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"BRGEW\",\n\t\t\"Type\": \"Numeric\",\n\t\t\"PropertyLength\": \"13, 3\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Gross Weight\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"NTGEW\",\n\t\t\"Type\": \"Numeric\",\n\t\t\"PropertyLength\": \"13, 3\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Net Weight\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"GEWEI\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"3\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Weight Unit\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"VOLUM\",\n\t\t\"Type\": \"Numeric\",\n\t\t\"PropertyLength\": \"13, 3\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Volume\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"VOLEH\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"3\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Volume unit\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"BEHVO\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"2\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Container requirements\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"RAUBE\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"2\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Storage conditions\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"TEMPB\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"2\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Temperature conditions indicator\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"EAN11\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"18\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"International Article Number (EAN/UPC)\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"NUMTP\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"2\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Category of International Article Number (EAN)\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"LAENG\",\n\t\t\"Type\": \"Numeric\",\n\t\t\"PropertyLength\": \"13, 3\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Length\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"BREIT\",\n\t\t\"Type\": \"Numeric\",\n\t\t\"PropertyLength\": \"13, 3\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Width\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"HOEHE\",\n\t\t\"Type\": \"Numeric\",\n\t\t\"PropertyLength\": \"13, 3\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Height\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"MEABM\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"3\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Unit of Dimension for Length/Width/Height\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"PRDHA\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"18\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Product hierarchy\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"DATAB\",\n\t\t\"Type\": \"Date\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Valid-From Date\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"ATTYP\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"2\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"Material Category\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"SLED_BBD\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"1\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"ExpirationDate\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"HUTYP\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"4\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"HandlingUnitType\"\n\t\t}]\n\t},\n\t{\n\t\t\"IsMultiLingual\": false,\n\t\t\"Name\": \"MOD_INFO\",\n\t\t\"Type\": \"String\",\n\t\t\"PropertyLength\": \"12\",\n\t\t\"Descriptions\": [{\n\t\t\t\"LanguageCode\": \"en\",\n\t\t\t\"Description\": \"modinfo\"\n\t\t}]\n\t}]\n}"
								},
								"url": "{{MASTERDATA_HOST}}/CustomDataConfiguration/v1/Packages('{{TenantPackageNamespace}}.{{PackageName}}')/ObjectTypes"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Metadata",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{MASTERDATA_HOST}}/CustomDataConfiguration/v1/$metadata"
					},
					"response": []
				},
				{
					"name": "Get Object Types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{MASTERDATA_HOST}}/CustomDataConfiguration/v1/ObjectTypes?$format=json",
							"host": [
								"{{MASTERDATA_HOST}}"
							],
							"path": [
								"CustomDataConfiguration",
								"v1",
								"ObjectTypes"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create ObjectType",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"{{TenantPackageNamespace}}.{{PackageName}}:Material\",\r\n  \"PackageName\": \"{{TenantPackageNamespace}}.{{PackageName}}\",\r\n  \"Descriptions\": [\r\n    {\r\n      \"LanguageCode\": \"en\",\r\n      \"Description\": \"Material Data\"\r\n    }\r\n  ],\r\n  \"Source\": \"Material Management\",\r\n  \"IsMultiLingual\": true,\r\n  \"Properties\": [\r\n    {\r\n      \"Name\": \"Material_Type\",\r\n      \"Type\": \"String\",\r\n      \"PropertyLength\": \"130\",\r\n      \"IsMultiLingual\": false\r\n    },\r\n    {\r\n      \"Name\": \"MATNR\",\r\n      \"Type\": \"String\",\r\n      \"PropertyLength\": \"130\",\r\n      \"IsMultiLingual\": false\r\n    }\r\n  ]\r\n} \r\n \r\n"
						},
						"url": "{{MASTERDATA_HOST}}/CustomDataConfiguration/v1/Packages('{{TenantPackageNamespace}}.{{PackageName}}')/ObjectTypes"
					},
					"response": []
				}
			]
		},
		{
			"name": "Thing",
			"item": [
				{
					"name": "Get RootObjectGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a7992916-4cf2-4880-9d71-addaace14fdd",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"RootObjectGroupId\", data.value[0].objectGroupID);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{AuthURI}}/ObjectGroups/?$filter=objectGroupParentID eq null&$format=json",
							"host": [
								"{{AuthURI}}"
							],
							"path": [
								"ObjectGroups",
								""
							],
							"query": [
								{
									"key": "$filter",
									"value": "objectGroupParentID eq null"
								},
								{
									"key": "$format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ObjectGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fb9e63e7-7cb8-4f8e-9c30-a4a7fc2cc596",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"if ( data.value.length == 0 ) {",
									"    postman.setEnvironmentVariable(\"ObjectGroupId\", postman.getEnvironmentVariable(\"RootObjectGroupId\"));",
									"} else {",
									"    postman.setEnvironmentVariable(\"ObjectGroupId\", data.value[0].objectGroupID);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{AuthURI}}/ObjectGroups/?$filter=objectGroupParentID eq '{{RootObjectGroupId}}'&$format=json",
							"host": [
								"{{AuthURI}}"
							],
							"path": [
								"ObjectGroups",
								""
							],
							"query": [
								{
									"key": "$filter",
									"value": "objectGroupParentID eq '{{RootObjectGroupId}}'"
								},
								{
									"key": "$format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Onboard things Recursively 19 times",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7aef1920-e1f0-4b39-893e-595dea97ec65",
								"exec": [
									"//var devices = [\"1\",\"2\",\"4\",\"7\",\"11\",\"12\",\"13\",\"81\",\"82\",\"141\",\"142\",\"201\",\"202\",\"251\",\"252\",\"261\",\"262\",\"281\",\"283\"]",
									"var devices = [\"500\",\"501\",\"503\",\"504\",\"505\",\"506\",\"507\",\"508\",\"509\",\"510\",\"511\",\"512\",\"513\",\"514\",\"515\"];",
									"var deviceId=postman.getEnvironmentVariable(\"DeviceId\");",
									"var bppersons = postman.getEnvironmentVariable(\"bppersons\");",
									"if ( bppersons ) {",
									"    bppersons = JSON.parse(bppersons).value;",
									"}",
									"",
									"postman.setEnvironmentVariable(\"PersonId\", bppersons[Math.floor((Math.random() * bppersons.length) + 1)][\"basicData\"][\"businessPartnerID\"]);",
									"",
									"var locations = postman.getEnvironmentVariable(\"locations\");",
									"if ( locations ) {",
									"    locations = JSON.parse(locations).value;",
									"}",
									"postman.setEnvironmentVariable(\"LocationId\", locations[Math.floor((Math.random() * locations.length) + 1)][\"basicData\"][\"LocationID\"]);",
									"",
									"if ( deviceId === undefined || deviceId === \"\" ) {",
									"    deviceId = devices[0];",
									"} else {",
									"    var anIndex = devices.indexOf(deviceId);",
									"    if ( anIndex == -1 ) {",
									"        deviceId = devices[0];",
									"    } else if ( anIndex < devices.length-1 ) {",
									"        deviceId = devices[anIndex+1];",
									"    } else {",
									"        deviceId = undefined;",
									"    }",
									"}",
									"postman.setEnvironmentVariable(\"DeviceId\", deviceId);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3a9e2ab1-5f21-4a9c-97ec-8b0b70943b4e",
								"exec": [
									"if(responseCode.code === 200) {",
									"    var data = JSON.parse(responseBody);",
									"    if(Array.isArray(data.value) && data.value.length > 0) {",
									"        if(data.value[0].hasOwnProperty(\"_id\") && data.value[0]._id.length > 0) {",
									"            postman.setEnvironmentVariable(\"existingThingId\", data.value[0]._id);",
									"        }",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"_externalId\": \"{{DeviceId}}\",\r\n\t\"_name\": \"{{DeviceId}}\",\r\n\t\"_description\": {\r\n\t\t\"en\": \"Connected Silo\"\r\n\t},\r\n\t\"_thingType\": [\"{{TenantPackageNamespace}}.{{PackageName}}:{{ThingTypeName}}\"],\r\n\t\"_objectGroup\": \"{{ObjectGroupId}}\",\r\n\t\"_location\":\"{{LocationId}}\",\r\n\t\"_customer\":\"{{PersonId}}\",\r\n\t\"_assignment\": {\r\n\t\t\"_devices\": [{\r\n\t\t\t\"_name\": \"{{DeviceId}}\",\r\n\t\t\t\"_gatewayName\": \"3\",\r\n\t\t\t\"_sensors\": [{\r\n\t\t\t\t\"_name\": \"{{DeviceId}}\",\r\n\t\t\t\t\"_sensorTypeId\": \"{{SensorTypeId}}\"\r\n\t\t\t}]\r\n\t\t}],\r\n\t\t\"_mappingId\": \"{{SensorTypeMappingId}}\"\r\n\t}\r\n}"
						},
						"url": "{{ThingURI}}/Things"
					},
					"response": []
				},
				{
					"name": "Read All Things",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7aef1920-e1f0-4b39-893e-595dea97ec65",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3a9e2ab1-5f21-4a9c-97ec-8b0b70943b4e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{ThingURI}}/Things"
					},
					"response": []
				},
				{
					"name": "Read All Things for Connected Silo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7aef1920-e1f0-4b39-893e-595dea97ec65",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3a9e2ab1-5f21-4a9c-97ec-8b0b70943b4e",
								"exec": [
									"if(responseCode.code === 200) {",
									"    var data = JSON.parse(responseBody);",
									"    ",
									"    var things = [];",
									"    var TenantPackageNamespace = postman.getEnvironmentVariable(\"TenantPackageNamespace\");",
									"    var PackageName = postman.getEnvironmentVariable(\"PackageName\");",
									"    var ThingTypeName = postman.getEnvironmentVariable(\"ThingTypeName\");",
									"",
									"    var thingType = TenantPackageNamespace+\".\"+PackageName+\":\"+ThingTypeName;",
									"    for ( var i = 0; i < data.value.length; i++ ) {",
									"        ",
									"        if ( data.value[i]._thingType == thingType ) {",
									"            things.push(data.value[i]._id);",
									"        }",
									"    }",
									"    ",
									"    postman.setEnvironmentVariable(\"allThings\",JSON.stringify(things));",
									"    ",
									"",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ThingURI}}/Things?$filter=_thingType eq '{{TenantPackageNamespace}}.{{PackageName}}:{{ThingTypeName}}'",
							"host": [
								"{{ThingURI}}"
							],
							"path": [
								"Things"
							],
							"query": [
								{
									"key": "$filter",
									"value": "_thingType eq '{{TenantPackageNamespace}}.{{PackageName}}:{{ThingTypeName}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Timeseries Data for a Thing Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b74c6a4c-45c6-4ddb-9bb0-50ee806e47d5",
								"exec": [
									"devices = JSON.parse(postman.getEnvironmentVariable(\"allThings\"));",
									"",
									"var deviceId=postman.getEnvironmentVariable(\"DeviceId\");",
									"if ( deviceId === undefined || deviceId === \"\" ) {",
									"    deviceId = devices[0];",
									"} else {",
									"    var anIndex = devices.indexOf(deviceId);",
									"    if ( anIndex == -1 ) {",
									"        deviceId = devices[0];",
									"    } else if ( anIndex < devices.length-1 ) {",
									"        deviceId = devices[anIndex+1];",
									"    } else {",
									"        deviceId = undefined;",
									"    }",
									"}",
									"",
									"var data = { \"value\" : []};",
									"",
									"for ( var i = 0; i < 20; i++ ) {",
									"    ",
									"    var temperature = Math.floor((Math.random() * 20) + 10);",
									"    var humidity = Math.floor((Math.random() * 25) + 0);",
									"    var fillLevelTons = Math.floor((Math.random() * 100) + 0);",
									"    var hour;",
									"    if ( i < 10 ) {",
									"        hour = \"0\"+i;",
									"    } else {",
									"        hour = \"\" + i;",
									"    }",
									"    ",
									"    data.value.push({",
									"\t\t\"_time\": \"2019-05-01T00:\"+hour+\":00Z\",",
									"\t\t\"temperature\": temperature,",
									"\t\t\"humidity\":humidity,",
									"\t\t\"fillLevelTons\":fillLevelTons",
									"\t});",
									"}",
									"",
									"postman.setEnvironmentVariable(\"DeviceId\", deviceId);",
									"postman.setEnvironmentVariable(\"DeviceData\", JSON.stringify(data));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{JWT-TOKEN}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{DeviceData}}"
						},
						"url": "{{ThingURI}}/Things('{{DeviceId}}')/{{TenantPackageNamespace}}.com.connected.silos:ConnectedSilos/SILO_TIME_SERIES"
					},
					"response": []
				},
				{
					"name": "Get Timeseries Data for a Thing",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7f91c0c1-2176-4d56-a1c4-48f29db0128e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{JWT-TOKEN}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{DeviceData}}"
						},
						"url": "{{ThingURI}}/Things('{{DeviceId}}')/{{TenantPackageNamespace}}.com.connected.silos:ConnectedSilos/SILO_TIME_SERIES"
					},
					"response": []
				},
				{
					"name": "Create Material Data for a Thing",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ba7d8d4e-d66f-4aff-bb03-9fad6e530fba",
								"exec": [
									"var devices = [\"500\",\"501\",\"503\",\"504\",\"505\",\"506\",\"507\",\"508\",\"509\",\"510\",\"511\",\"512\",\"513\",\"514\",\"515\",\"516\",\"517\",\"518\",\"519\",\"520\",\"521\",\"522\",\"523\",\"523\",\"524\",\"525\"];",
									"",
									"devices = JSON.parse(postman.getEnvironmentVariable(\"allThings\"));",
									"",
									"var deviceId=postman.getEnvironmentVariable(\"DeviceId\");",
									"if ( deviceId === undefined || deviceId === \"\" ) {",
									"    deviceId = devices[0];",
									"} else {",
									"    var anIndex = devices.indexOf(deviceId);",
									"    if ( anIndex == -1 ) {",
									"        deviceId = devices[0];",
									"    } else if ( anIndex < devices.length-1 ) {",
									"        deviceId = devices[anIndex+1];",
									"    } else {",
									"        deviceId = undefined;",
									"    }",
									"}",
									"",
									"var data = { \"value\" : []};",
									"",
									"anIndex = devices.indexOf(deviceId);",
									"",
									"var m = (anIndex %2 === 0 )?\"Glucose\":\"Sugar\";",
									"",
									"data.value.push({",
									"\t\"_time\": \"2019-03-20T00:00:00Z\",",
									"\t\"Material\": m,",
									"});",
									"",
									"",
									"postman.setEnvironmentVariable(\"DeviceId\", deviceId);",
									"postman.setEnvironmentVariable(\"DeviceData\", JSON.stringify(data));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{JWT-TOKEN}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{DeviceData}}"
						},
						"url": "{{ThingURI}}/Things('{{DeviceId}}')/{{TenantPackageNamespace}}.com.connected.silos:ConnectedSilos/Material"
					},
					"response": []
				}
			]
		},
		{
			"name": "Business Partner",
			"item": [
				{
					"name": "Create Business Partners Recursively",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7aef1920-e1f0-4b39-893e-595dea97ec65",
								"exec": [
									"var names = [\"John\",\"Smith\",\"Joe\",\"David\",\"Arjun\",\"Gautam\",\"Om\",\"Jeet\",\"Neo\",\"Trinity\"]",
									"var bpName=postman.getEnvironmentVariable(\"BPNAME\");",
									"if ( bpName === undefined || bpName === \"\" ) {",
									"    bpName = names[0];",
									"} else {",
									"    var anIndex = names.indexOf(bpName);",
									"    if ( anIndex == -1 ) {",
									"        bpName = names[0];",
									"    } else if ( anIndex < names.length-1 ) {",
									"        bpName = names[anIndex+1];",
									"    } else {",
									"        bpName = undefined;",
									"    }",
									"}",
									"postman.setEnvironmentVariable(\"BPNAME\", bpName);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3a9e2ab1-5f21-4a9c-97ec-8b0b70943b4e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"basicData\": {\n\t\t\"tenant\": \"{{TENANT_GUID}}\"\n\t},\n\t\"personName\": {\n\t\t\"familyName\": \" \",\n\t\t\"givenName\": \"{{BPNAME}}\"\n\t},\n\t\"communicationData\": {\n\t\t\"emailAddress\": \"{{BPNAME}}1@xyz.com\",\n\t\t\"cityName\": \"Bangalore\",\n\t\t\"postalCode\": \"560066\",\n\t\t\"country\": \"IN\",\n\t\t\"countryDescription\": \"India\"\n\t},\n\t\"objectGroup\": \"{{ObjectGroupId}}\"\n}"
						},
						"url": "{{BP_HOST}}/Persons"
					},
					"response": []
				},
				{
					"name": "Fetch All Business Partners",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7aef1920-e1f0-4b39-893e-595dea97ec65",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3a9e2ab1-5f21-4a9c-97ec-8b0b70943b4e",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"bppersons\", JSON.stringify(jsonData));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{BP_HOST}}/Persons"
					},
					"response": []
				}
			]
		},
		{
			"name": "Location",
			"item": [
				{
					"name": "Create Location Recursively",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7aef1920-e1f0-4b39-893e-595dea97ec65",
								"exec": [
									"var names = [\"John\",\"Smith\",\"Joe\",\"David\",\"Arjun\",\"Gautam\",\"Om\",\"Jeet\",\"Neo\",\"Trinity\"]",
									"var bpName=postman.getEnvironmentVariable(\"BPNAME\");",
									"if ( bpName === undefined || bpName === \"\" ) {",
									"    bpName = names[0];",
									"} else {",
									"    var anIndex = names.indexOf(bpName);",
									"    if ( anIndex == -1 ) {",
									"        bpName = names[0];",
									"    } else if ( anIndex < names.length-1 ) {",
									"        bpName = names[anIndex+1];",
									"    } else {",
									"        bpName = undefined;",
									"    }",
									"}",
									"postman.setEnvironmentVariable(\"BPNAME\", bpName);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3a9e2ab1-5f21-4a9c-97ec-8b0b70943b4e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"basicData\": {\n\t\t\"tenant\": \"{{TENANT_GUID}}\"\n\t},\n\t\"personName\": {\n\t\t\"familyName\": \" \",\n\t\t\"givenName\": \"{{BPNAME}}\"\n\t},\n\t\"communicationData\": {\n\t\t\"emailAddress\": \"{{BPNAME}}1@xyz.com\",\n\t\t\"cityName\": \"Bangalore\",\n\t\t\"postalCode\": \"560066\",\n\t\t\"country\": \"IN\",\n\t\t\"countryDescription\": \"India\"\n\t},\n\t\"objectGroup\": \"{{ObjectGroupId}}\"\n}"
						},
						"url": "{{BP_HOST}}/Persons"
					},
					"response": []
				},
				{
					"name": "Fetch All Locations",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7aef1920-e1f0-4b39-893e-595dea97ec65",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3a9e2ab1-5f21-4a9c-97ec-8b0b70943b4e",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"locations\", JSON.stringify(jsonData));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{LoginTokenT1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{LOCATION_HOST}}/Locations"
					},
					"response": []
				}
			]
		},
		{
			"name": "Smart Business",
			"item": [
				{
					"name": "Smart Business Metadata",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": ""
					},
					"response": []
				}
			]
		}
	]
}